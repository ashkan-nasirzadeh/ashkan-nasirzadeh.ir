[{"sort_num":1,"color":"black","type":"img","group":"intro-img","format":"txt","content":"../../assets/computer-science/pics/api.jpg"},{"sort_num":2,"color":"black","type":"bdi-text","group":"intro-head","format":"txt","content":"react"},{"sort_num":3,"color":"black","type":"bdi-text","group":"intro-author","format":"txt","content":"src = ../../assets/homepage/media/rasmi.jpg, alt = اشکان نصیرزاده , name = اشکان نصیرزاده"},{"sort_num":4,"color":"black","type":"text","group":"code","format":"txt","content":"node --version<br>npm --version<br>npm install &lt;package&gt; # local<br>npm i &lt;package&gt; # local<br>npm install &lt;package1&gt; &lt;package2&gt; ...<br>npm install -g &lt;package&gt;<br>npm install react &lt;local&gt;<br>npm install react<br>npm init<br>npm init -y<br>npm install # install all package.json (or package-lock.json)<br>npm install --save-dev react<br>npm install react react-dom<br>npm install -g create-react-app<br>create-react-app --version<br>create-react-app hackernews<br>"},{"sort_num":5,"color":"black","type":"text","group":"code","format":"txt","content":"npm test<br>npm test<br>npm run build<br>"},{"sort_num":6,"color":"black","type":"bdi-text","group":"para","format":"txt","content":"تفاوت let و var<br>1- let بلوکی اما var تابعی<br>2- در let از قبل دسترسی نداریم اما در var از قبل undefined است<br>3- let از طریق window دسترسی نداریم<br>4- var را می توانیم دوباره تعریف کنیم اما let را نه<br>"},{"sort_num":7,"color":"black","type":"text","group":"code","format":"txt","content":"ReactDOM.render(component, element)<br><br>//example:<br>ReactDOM.render(<br>&nbsp; &nbsp; &lt;div&gt;<br>&nbsp; &nbsp; &nbsp; &nbsp; &lt;comp1&gt;<br>&nbsp; &nbsp; &nbsp; &nbsp; &lt;comp2&gt;<br>&nbsp; &nbsp; &lt;/div&gt;<br>&nbsp; &nbsp; document.getElementById('root')<br>);<br>"},{"sort_num":8,"color":"black","type":"text","group":"code","format":"txt","content":"if (module.hot) {<br>&nbsp; &nbsp; module.hot.accept();<br>}<br>"},{"sort_num":9,"color":"black","type":"text","group":"code","format":"txt","content":"(item) =&gt; { ... }<br>item =&gt; { ... }<br>x =&gt; x*2 :: function (x) { return x*2 }<br>"},{"sort_num":10,"color":"black","type":"text","group":"code","format":"txt","content":"//app.js<br>const arrToShow = [\n<br>&nbsp; {\n<br>&nbsp; &nbsp; objID: 0,\n<br>&nbsp; &nbsp; title: 'react',\n<br>&nbsp; &nbsp; exp: 'this is a book about react'\n<br>&nbsp; },\n<br>&nbsp; {\n<br>&nbsp; &nbsp; objID: 1,\n<br>&nbsp; &nbsp; title: 'native',\n<br>&nbsp; &nbsp; exp: 'this is a book about react native and mobile apps'\n<br>&nbsp; }\n<br>]\n<br>function App() {\n<br>\n<br>\n<br>&nbsp; return (\n<br>&nbsp; &nbsp; &lt;&gt;\n<br>&nbsp; &nbsp; &nbsp; {arrToShow.map(item =&gt; \n<br>&nbsp; &nbsp; &nbsp; &nbsp; [&lt;span&gt;Number:&lt;/span&gt;,&lt;span&gt;{item.objID}&lt;/span&gt;,&lt;br&gt;&lt;/br&gt;,\n<br>&nbsp; &nbsp; &nbsp; &nbsp; &lt;span&gt;title:&lt;/span&gt;,&lt;span&gt;{item.title}&lt;/span&gt;,&lt;br&gt;&lt;/br&gt;,\n<br>&nbsp; &nbsp; &nbsp; &nbsp; &lt;span&gt;exp:&lt;/span&gt;,&lt;span&gt;{item.exp}&lt;/span&gt;,&lt;br&gt;&lt;/br&gt;]\n<br>&nbsp; &nbsp; &nbsp; )}\n<br>&nbsp; &nbsp; &lt;/&gt;\n<br>&nbsp; );\n<br>}\n<br>\n<br>\n<br>\n<br>export default App;<br>"},{"sort_num":11,"color":"black","type":"text","group":"code","format":"txt","content":"import React from 'react';\n<br>import logo from './logo.svg';\n<br>import './App.css';\n<br>\n<br>\n<br>\n<br>const arrToShow = [\n<br>&nbsp; {\n<br>&nbsp; &nbsp; objID: 0,\n<br>&nbsp; &nbsp; title: 'react',\n<br>&nbsp; &nbsp; exp: 'this is a book about react'\n<br>&nbsp; },\n<br>&nbsp; {\n<br>&nbsp; &nbsp; objID: 1,\n<br>&nbsp; &nbsp; title: 'native',\n<br>&nbsp; &nbsp; exp: 'this is a book about react native and mobile apps'\n<br>&nbsp; }\n<br>]\n<br>function App() {\n<br>&nbsp; &nbsp; return ( \n<br>&nbsp; &nbsp; &lt;div&gt; \n<br>&nbsp; &nbsp; &nbsp; {arrToShow.map(item =&gt; \n<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;&gt;\n<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;span&gt;{item.title}&lt;/span&gt;&lt;br&gt;&lt;/br&gt;\n<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;span&gt;{item.title}&lt;/span&gt;&lt;br&gt;&lt;/br&gt;\n<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;span&gt;{item.title}&lt;/span&gt;&lt;br&gt;&lt;/br&gt;\n<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;span&gt;{item.title}&lt;/span&gt;&lt;br&gt;&lt;/br&gt;\n<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/&gt;\n<br>&nbsp; &nbsp; &nbsp; )} \n<br>&nbsp; &nbsp; &lt;/div&gt; \n<br>&nbsp; ); \n<br>}\n<br>\n<br>\n<br>\n<br>export default App;<br>"},{"sort_num":12,"color":"black","type":"text","group":"code","format":"txt","content":"class App extends Component {\r<br>&nbsp; constructor(props) {\r<br>&nbsp; &nbsp; super(props);\r<br>&nbsp; &nbsp; this.onDismiss = this.onDismiss.bind(this)\r<br>&nbsp; }\r<br>&nbsp; sayhello() {\r<br>\r<br>&nbsp; }\r<br>&nbsp; onDismiss(id) {\r<br>&nbsp; &nbsp; list.push({\r<br>&nbsp; &nbsp; &nbsp; title: 'ghol',\r<br>&nbsp; &nbsp; &nbsp; name: 'shol',\r<br>&nbsp; &nbsp; &nbsp; age: '78',\r<br>&nbsp; &nbsp; &nbsp; objNum: 3\r<br>&nbsp; &nbsp; })\r<br>&nbsp; &nbsp; this.setState({list: list})\r<br>&nbsp; }\r<br>&nbsp; render() {\r<br>&nbsp; &nbsp; return (\r<br>&nbsp; &nbsp; &nbsp; &lt;&gt;\r<br>&nbsp; &nbsp; &nbsp; {list.map(item =&gt;\r<br>&nbsp; &nbsp; &nbsp; &nbsp; &lt;div key={item.objNum}&gt;\r<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;span&gt;{item.title}&lt;/span&gt;\r<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;button onClick={() =&gt; this.onDismiss(item.objNum)}&gt;add&lt;/button&gt;\r<br>&nbsp; &nbsp; &nbsp; &nbsp; &lt;/div&gt;\r<br>&nbsp; &nbsp; &nbsp; )}\r<br>&nbsp; &nbsp; &nbsp; &lt;/&gt;\r<br>&nbsp; &nbsp; )\r<br>&nbsp; }\r<br>}<br>"},{"sort_num":13,"color":"black","type":"bdi-text","group":"head2","format":"txt","content":"مفهوم binding"},{"sort_num":14,"color":"black","type":"text","group":"code","format":"txt","content":"<b>const module = {<br>&nbsp; x: 42,<br>&nbsp; getX: function() {<br>&nbsp; &nbsp; return this.x;<br>&nbsp; }<br>};<br><br>const unboundGetX = module.getX; // in fact unboundGetX is return this.x and this means nothing here cause it's not refering to module;<br>console.log(unboundGetX()); // The function gets invoked at the global scope<br>// expected output: undefined<br><br>const boundGetX = unboundGetX.bind(module);<br>console.log(boundGetX());<br>// expected output: 42<br><br></b>"},{"sort_num":15,"color":"black","type":"text","group":"code","format":"txt","content":"// now you can understand:<br>this.func = this.func.bind(this)<br>"},{"sort_num":16,"color":"black","type":"bdi-text","group":"para","format":"txt","content":"حالا در داخل تابع this.func وقتی که از کلمه ی کلیدی this استفاده می کنی یعنی داری به همین کامپوننت اشاره می کنی نه undefiend"},{"sort_num":17,"color":"black","type":"text","group":"code","format":"txt","content":"import React, { Component } from 'react';\r<br>import logo from './logo.svg';\r<br>import './App.css';\r<br>\r<br>let list = [\r<br>&nbsp; {\r<br>&nbsp; &nbsp; title: 'react',\r<br>&nbsp; &nbsp; objNum: 1\r<br>&nbsp; },\r<br>&nbsp; {\r<br>&nbsp; &nbsp; title: 'react native',\r<br>&nbsp; &nbsp; objNum: 2\r<br>&nbsp; },\r<br>&nbsp; {\r<br>&nbsp; &nbsp; title: 'angular',\r<br>&nbsp; &nbsp; objNum: 3\r<br>&nbsp; }\r<br>]\r<br>\r<br>class App extends Component {\r<br>&nbsp; constructor (props) {\r<br>&nbsp; &nbsp; super(props)\r<br>&nbsp; &nbsp; this.change = this.change.bind(this)\r<br>&nbsp; &nbsp; this.state = {\r<br>&nbsp; &nbsp; &nbsp; list: list,\r<br>&nbsp; &nbsp; &nbsp; term: ''\r<br>&nbsp; &nbsp; }\r<br>&nbsp; }\r<br>&nbsp; change (inputVal) {\r<br>&nbsp; &nbsp; // alert(inputVal)\r<br>&nbsp; &nbsp; // console.log(inputVal)\r<br>&nbsp; &nbsp; this.setState({term: inputVal}, () =&gt; this.setState({list: this.state.list.filter(item =&gt; item.title.includes(this.state.term))}))\r<br>    \r<br>&nbsp; }\r<br>&nbsp; render () {\r<br>&nbsp; &nbsp; return (\r<br>&nbsp; &nbsp; &nbsp; &lt;div className=\"main-wrapper\"&gt;\r<br>&nbsp; &nbsp; &nbsp; &nbsp; &lt;div className=\"main-c\"&gt;\r<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;Search onChange={(item) =&gt; this.change(item)}/&gt;\r<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;Table list={this.state.list} /&gt;\r<br>&nbsp; &nbsp; &nbsp; &nbsp; &lt;/div&gt;\r<br>&nbsp; &nbsp; &nbsp; &lt;/div&gt;\r<br>&nbsp; &nbsp; )\r<br>&nbsp; }\r<br>}\r<br>class Search extends Component {\r<br>&nbsp; constructor (props) {\r<br>&nbsp; &nbsp; super(props)\r<br>&nbsp; &nbsp; this.state = {}\r<br>&nbsp; }\r<br>&nbsp; render () {\r<br>&nbsp; &nbsp; const {onChange} = this.props\r<br>&nbsp; &nbsp; return (\r<br>&nbsp; &nbsp; &nbsp; &lt;div className=\"topBar-c\"&gt;\r<br>&nbsp; &nbsp; &nbsp; &nbsp; &lt;input className=\"searchInput\" onChange={(ev) =&gt; onChange(ev.target.value)} autoFocus&gt;&lt;/input&gt;\r<br>&nbsp; &nbsp; &nbsp; &lt;/div&gt;\r<br>&nbsp; &nbsp; )\r<br>&nbsp; }\r<br>}\r<br>class Table extends Component {\r<br>&nbsp; render () {\r<br>&nbsp; &nbsp; const {list, onClick} = this.props\r<br>&nbsp; &nbsp; return (\r<br>&nbsp; &nbsp; &nbsp; &lt;div className=\"results-c\"&gt;\r<br>&nbsp; &nbsp; &nbsp; &nbsp; {list.map(item =&gt; \r<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;div className=\"result-c\" key={item.objNum}&gt;\r<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;div&gt;{item.title}&lt;/div&gt;\r<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;div className=\"jj\"&gt;\r<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;div onClick={onClick}&gt;dismiss&lt;/div&gt;\r<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/div&gt;\r<br>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/div&gt;\r<br>&nbsp; &nbsp; &nbsp; &nbsp; )}\r<br>\r<br>&nbsp; &nbsp; &nbsp; &lt;/div&gt;\r<br>&nbsp; &nbsp; )\r<br>&nbsp; }\r<br>}\r<br>export default App;\r<br><br>"}]