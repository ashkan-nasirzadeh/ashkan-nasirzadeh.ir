[{"sort_num":1,"color":"darkred","type":"img","group":"intro-img","format":"txt","content":"../../../../assets/computer-science/pics/powershell.jpg"},{"sort_num":2,"color":"darkred","type":"bdi-text","group":"intro-author","format":"txt","content":"src = ../../../../assets/homepage/media/rasmi.jpg, name = اشکان نصیرزاده , alt = اشکان نصیرزاده"},{"sort_num":3,"color":"darkred","type":"bdi-text","group":"intro-head","format":"txt","content":"powershell"},{"sort_num":4,"color":"orangered","type":"bdi-text","group":"head1","format":"txt","content":"کمک گرفتن در powershell"},{"sort_num":5,"color":"orangered","type":"bdi-text","group":"para","format":"txt","content":"برای کمک گرفتن در پاورشل دستور اصلی Get-Help است اما می توان از دستورات help و man نیز استفاده کرد."},{"sort_num":6,"color":"orangered","type":"text","group":"code","format":"txt","content":"Get-Help dir<br>man dir<br>help dir<br>"},{"sort_num":7,"color":"orangered","type":"bdi-text","group":"para","format":"txt","content":"من جمله سوویچ های مهم در این رابطه عبارتند از :"},{"sort_num":8,"color":"orangered","type":"text","group":"code","format":"txt","content":"help dir -showWindow<br>help dir -Detailed<br>help dir -examples<br>help dir -Full<br>help *user*<br>"},{"sort_num":9,"color":"orangered","type":"bdi-text","group":"para","format":"txt","content":"اگر مثلا examples ها رو براتون نمیاره باید از فرمان زیر استفاده بکنید:"},{"sort_num":10,"color":"orangered","type":"text","group":"code","format":"txt","content":"Update-Help"},{"sort_num":11,"color":"tomato","type":"bdi-text","group":"head1","format":"txt","content":"غربال گری نتایج در powershell"},{"sort_num":12,"color":"tomato","type":"bdi-text","group":"para","format":"txt","content":"اولا می تونید از از سرتیتر ها به شکل سوییچ استفاده کنید مثلا در مثال زیر تمام آیتم هایی که نام آنها d دارد را می گیریم:"},{"sort_num":13,"color":"tomato","type":"text","group":"code","format":"txt","content":"dir -Name *d*"},{"sort_num":14,"color":"tomato","type":"bdi-text","group":"para","format":"txt","content":"دوما باید کار با استرینگ ها در powershell را بلد باشیم :"},{"sort_num":15,"color":"tomato","type":"text","group":"code","format":"txt","content":"PS&gt; '12' -match '\\d\\d'<br>True<br>---------------------------------------------<br>PS&gt; $data = @('12', '13', 'ali', 'hosi')<br>PS&gt; $data -match '\\d\\d'<br>12<br>13<br>---------------------------------------------<br>PS&gt; $a = 'ali is 18 years old'&nbsp;<br>PS&gt;&nbsp;$a -match '\\w+\\s+is (\\d+)\\s+years old'<br>PS&gt; $Matches<br>&nbsp;Name&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Value&nbsp;<br>&nbsp;----&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;-----<br>&nbsp; &nbsp;1&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 18<br>&nbsp; &nbsp;0&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ali is 18 years old&nbsp;<br>---------------------------------------------<br>$message = 'My Name is Kevin and my SSN is 123-45-6789.' <br>if($message -match 'My Name is (?&lt;Name&gt;.+) and my SSN is (?&lt;SSN&gt;\\d\\d\\d-\\d\\d-\\d\\d\\d\\d)\\.') <br>{ <br>$Matches.Name <br>$Matches.SSN <br>}<br>"},{"sort_num":16,"color":"tomato","type":"bdi-text","group":"para","format":"code","content":"این مورد سه حالت دیگر هم دارد:<br>۱- imatch : غیر کیس سنستیو میکنه<br>۲- cmatch : کیس سنستیو میکنه<br>۳- notmatch : وقتی که هیچ تطابقی درست نیست true برمی گرداند.<br>"},{"sort_num":17,"color":"tomato","type":"text","group":"code","format":"txt","content":"PS&gt; $message = 'hello world how are you?'<br>PS&gt; $message.contains('hello')<br>true<br>"},{"sort_num":18,"color":"tomato","type":"text","group":"code","format":"txt","content":"PS&gt; $a = 'i am hasan'<br>PS&gt; $b = $a.Replace('hasan', 'ashkan')<br>PS&gt; $b<br>i am ashkan<br>PS&gt; $b.Length<br>11<br>"},{"sort_num":19,"color":"tomato","type":"text","group":"code","format":"txt","content":"PS&gt; 'a,b,c' -split ','<br>a<br>b<br>c<br>---------------------------------<br>PS&gt; $a = 'a,b,c'<br>PS&gt; $b = $a.Split(',')<br>PS&gt; $b<br>a<br>b<br>c<br>"},{"sort_num":20,"color":"tomato","type":"bdi-text","group":"para","format":"txt","content":"این نیز حالت های split- , -csplit دارد."},{"sort_num":21,"color":"tomato","type":"text","group":"code","format":"txt","content":"PS&gt; $a = '12'<br>PS C:\\Users\\ashkan nasirzadeh&gt; switch -regex ($a) {<br>&gt;&gt; '/d' {<br>&gt;&gt; Write-Warning 'one d'<br>&gt;&gt; }<br>&gt;&gt; '\\d\\d' {<br>&gt;&gt; Write-Warning 'two d'<br>&gt;&gt; }<br>&gt;&gt; }<br>WARNING: two d<br>"},{"sort_num":22,"color":"darkgoldenrod","type":"bdi-text","group":"head1","format":"txt","content":"مدیریت دیسک ها در powershell"},{"sort_num":23,"color":"darkgoldenrod","type":"bdi-text","group":"para","format":"txt","content":"اولا باید کلا بدونید که داستان چیه ؟ داستان اینه که ما یک سری دیسک داریم که همون دیسک های فیزیکی ای هستند که به سخت افزار وصل می شوند و باید بدونید که مثلا هم یک دیسک محسوب می شود حالا این دیسک ها رو می خواهیم چی کار کنیم؟<br>۱- اولا شاید بخواهیم این دیسک ها رو اضافه کنیم:<br>برای این کار باید اول قسمت بندیشون کنیم که به کامپیوتر بفهمونیم چقدر از حجمشون رو می خواهیم که به این کار می گیم پارتیشن بندی دوما باید فایل سیستم مورد نظر رو روی اون پارتیشن نصب کنیم یا به اصطلاح شخمش بزنیم که آماده ی کاشت اطلاعات بشود که این کار رو از طریق فرمت کردن انجام می دیم<br>۲- کار دیگه ای که ممکنه بخواهیم بکنیم پارک کردن پارتیشن ها و دوباره ساختن آنهاست<br>۳- و در نهایت کار سومی که می خواهیم بکنیم اضافه کردن فضا به هارد دیسکمون هست<br>در این آموزش ۲ مورد اول رو یاد می گیریم و مورد سوم فعلا حال ندارم بذارم:<br>"},{"sort_num":24,"color":"darkgoldenrod","type":"text","group":"code","format":"txt","content":"# to build a new partition:<br>-----------------------------------------------<br># get the number of the disk that you want to add:<br>PS&gt; Get-Disk<br># initialize it:<br>PS&gt; Initialize-Disk -Number 1<br># partition it with max size of that<br>PS&gt; New-Partition -DiskNumber 1 -DriveLetter D -UseMaximumSize<br># get the drive letter that you want to format<br>PS&gt; Get-Volume<br># format that volume with default filesystem<br>PS&gt; Format-Volume -DriveLetter E<br>"},{"sort_num":25,"color":"darkgoldenrod","type":"text","group":"code","format":"txt","content":"# to delete a partition:<br>-----------------------------------------------<br>diskpart<br>list disk<br>select disk n<br>list partition<br>select partition n<br>delete partition #or delete partition OVERRIDE<br>"},{"sort_num":26,"color":"darkorange","type":"bdi-text","group":"head1","format":"txt","content":"کار با user ها و group ها در powershell"},{"sort_num":27,"color":"darkorange","type":"bdi-text","group":"para","format":"txt","content":"دقت کنید که کاربر در ویندوز بدون گروه هیچ معنایی ندارد زیرا که اصلا بدون تعلق به یک گروه سطح دسترسی ای متصور نیست و همچنین دقت کنید برای هر user باید یک password داشته باشید."},{"sort_num":28,"color":"darkorange","type":"text","group":"code","format":"txt","content":"# get all users:<br>PS&gt;&nbsp;Get-LocalUser<br># get all groups:<br>PS&gt;&nbsp;Get-LocalGroup<br># add a user and bind it with a group:<br>PS&gt;&nbsp;New-LocalUser -Name newTestUser<br>PS&gt;&nbsp;Add-LocalGroupMember -Group \"administrators\"<br># add a group and add a user to it:<br>PS&gt;&nbsp;&nbsp;New-LocalGroup -Name newTestgroup<br>PS&gt;&nbsp;&nbsp;Add-LocalGroupMember -Group \"administrators\"<br># get members of a group:<br>PS&gt;&nbsp;Get-LocalGroupMember -Group 'administrators'<br>"},{"sort_num":29,"color":"darksalmon","type":"bdi-text","group":"head1","format":"txt","content":"حلقه ها ، شروط ، متغیر ها"},{"sort_num":30,"color":"darksalmon","type":"text","group":"code","format":"txt","content":"# build 10 folder:<br>PS&gt; for ($i = 1; $i -le 10; $i++) { mkdir $i }<br># delete same folders:<br>PS&gt; for ($i = 1; $i -le 10; $i++) { rmdir $i }<br># delete all directories that have one digit name:<br>PS&gt; dir | ForEach-Object { if ($_ -match '^\\d$') { rmdir $_ } }<br># delete all mp3 files (1):<br>PS&gt; dir | ForEach-Object { $Matches = @() ; echo ------$_ ; $_ -match '(\\w+)\\.(\\w+)' ; if&nbsp; ($Matches[2] -eq 'mp3') { Remove-Item $Matches[0] }}<br># delete all mp3 files (2):<br>PS&gt; dir | Where-Object { $_ -match '^(.+)\\.mp3$' } | Remove-Item<br># get all directories that have 'ali' string in their names:<br>PS&gt; dir | Where-Object { $_.Name -like '*ali*' }<br>--------------------------------------------------------------------<br># get variable type:<br>PS&gt; $x | Get-Member<br>#&nbsp;type casting:<br>PS&gt; [string]$a = 123<br>--------------------------------------------------------------------<br># arrays:<br>PS&gt; $a = 1,2,3,4<br>PS&gt; $a[0]<br>1<br>PS&gt; $a[1,2]<br>2<br>3<br>PS&gt; $a[0..2]<br>1<br>2<br>3<br>--------------------------------------------------------------------<br># About Comparison Operators:<br># -eq : equals<br># -ne : not equals<br># -gt : greater than<br># -lt : less than<br># -ge : greater than or equal<br># -le : less than or equal<br># About logical operators:<br># -or<br># -and<br>"},{"sort_num":33,"color":"sienna","type":"bdi-text","group":"head1","format":"txt","content":"کار با فایل ها در powershell"},{"sort_num":34,"color":"sienna","type":"text","group":"code","format":"txt","content":"# make a file<br>PS&gt; New-Item song.mp3<br># delete a file<br>PS&gt; Remove-Item song.mp3<br># make a directory<br>PS&gt; mkdir folder<br># delete a directory<br>PS&gt; rmdir folder<br># delete a directory with everything in it<br>PS&gt; rmdir folder -Recurse<br># get a list of all files and folders<br>PS&gt; dir<br># copy<br>PS&gt; copy file1 .\\folder\\file1<br># move<br>PS&gt; move file1 .\\folder\\file1<br># get content:<br>PS&gt; Get-Content .\\file.txt<br><br>#example:<br>PS&gt; dir | Where-Object { ($_.Name -match '^file1$') -or ($_.Name -match '^file2$') }<br>"},{"sort_num":35,"color":"darkgrey","type":"bdi-text","group":"head1","format":"txt","content":"کار با process ها و service ها"},{"sort_num":36,"color":"darkgrey","type":"text","group":"code","format":"txt","content":"# get all services:<br>PS&gt; Get-Service<br># get all processes:<br>PS&gt; Get-Process<br><br># restart a service:<br>PS&gt;&nbsp;Get-Service -Name XblGameSave | Restart-Service<br># restart a process:<br>PS&gt;&nbsp;Get-Process -Name notepad | Stop-Process ; notepad&nbsp;<br><br># check a service running or not:<br>PS&gt;&nbsp;$a = Get-Service -Name XblGameSave; $a.Status<br># check a process running or not (true: running, false: stopped):<br>PS&gt;&nbsp;$a = Get-Process -Name notepad; $a -ne $null<br>"},{"sort_num":37,"color":"darkmagenta","type":"bdi-text","group":"head1","format":"txt","content":"مثال ها:"},{"sort_num":38,"color":"darkmagenta","type":"text","group":"code","format":"txt","content":"<div>$files = dir<br></div><div><div>$counter = 0;</div><div>foreach ($item in $files)</div><div>{</div><div>&nbsp; &nbsp; $counter++</div><div>}</div><div>Write-Host $counter</div></div><div>--------------------------------------------------</div><div><div>for ($i=1;$i -le 5;$i++)</div><div>{</div><div>&nbsp; &nbsp; $userName = 'user' + $i.ToString();</div><div>&nbsp; &nbsp; New-LocalUser -Name $userName -NoPassword</div><div>}</div></div><div>--------------------------------------------------</div><div><div>$con = 0;</div><div>while ($con -le 10) {</div><div>&nbsp; &nbsp; Write-Host $con;</div><div>&nbsp; &nbsp; $con++;</div><div>}</div></div><div><div>0</div><div>1</div><div>2</div><div>3</div><div>4</div><div>5</div><div>6</div><div>7</div><div>8</div><div>9</div><div>10</div></div><div>--------------------------------------------------</div><div><div>$con = 0;</div><div>do {</div><div>&nbsp; &nbsp; $con++;</div><div>&nbsp; &nbsp; Write-Host $con;</div><div>} while ($con -le 10)</div></div><div><div>0</div><div>1</div><div>2</div><div>3</div><div>4</div><div>5</div><div>6</div><div>7</div><div>8</div><div>9</div><div>10</div></div><div>11</div><div>--------------------------------------------------</div><div><div>$color = Read-Host 'ENTER COLOR'</div><div>$price = Read-Host 'ENTER PRICE'</div><div>$comName = $env:COMPUTERNAME</div><div>if (($color -eq 'blue') -and ($price -le 100))</div><div>{</div><div>&nbsp; &nbsp; clear;</div><div>&nbsp; &nbsp; Write-Host 'from' $comName ': buy'</div><div>}</div><div>else</div><div>{</div><div>&nbsp; &nbsp; clear;</div><div>&nbsp; &nbsp; Write-Host 'from' $comName ': DO NOT BUY'</div><div>}</div></div>"}]