[{"sort_num":1,"color":"black","type":"text","group":"intro-head","format":"txt","content":"HTTP"},{"sort_num":2,"color":"black","type":"bdi-text","group":"intro-author","format":"txt","content":"src=../../assets/homepage/media/rasmi.jpg , alt = ashkan nasirzadeh اشکان نصیرزاده , name = اشکان نصیرزاده"},{"sort_num":3,"color":"black","type":"img","group":"intro-img","format":"txt","content":"../../assets/computer-science/pics/api.jpg"},{"sort_num":4,"color":"black","type":"bdi-text","group":"para","format":"txt","content":"http یک پروتکل application/level است که برای سیستم های توزیع شده ، مشترک و hypermedia information استفاده می شود . http اساس انتقال داده ها در بستر world wide web (یا اینترنت) از سال ۱۹۹۰ می باشد. این دوره بر اساس مشخصات فنی RFC-2616 میباشد که در مورد HTTP/1.1 می باشد.<br>تفاوت اصلی بین HTTP/1.1 و HTTP/1.0 این است که ورژن قدیمی تر برای هر تبادل request/responce از یک connection جدید استفاده می کرد.<br>"},{"sort_num":5,"color":"black","type":"bdi-text","group":"para","format":"txt","content":"در حقیقت http یک پروتکل تبادل داده ها بر اساس TCP/IP می باشد که برای انتقال دیتا در شبکه ی www استفاه می شود (انتقال عکس ها یا اچ تی ام ال ها یا query results یا ...) ، پورت مفروض TCP 80 می باشد اما پورت های دیگری هم می توانند استفاده بشوند.<br>HTTP مشخص می کند که چگونه داده های درخواست های client ساختار بندی بشوند و به سرور فرستاده بشوند و اینکه چگونه سرور به این درخواست ها پاسخ می دهد.<br>"},{"sort_num":6,"color":"darkred","type":"bdi-text","group":"head1","format":"txt","content":"ویژگی های پایه"},{"sort_num":7,"color":"darkred","type":"bdi-text","group":"para","format":"txt","content":"سه ویژگی اساسی وجود دارد که باعث می شود این پروتکل ساده اما قدرتمند باشد:<br>۱- HTTP is connectionless: یک client اچ تی تی پی یک درخواستی رو initiate می کنه و بعد منتظر پاسخش می مونه و بعد که سرور بهش جواب می ده کانکشن رو می بنده در نتیجه سرور و کلاینت فقط روی همون درخواست/پاسخ همدیگه رو میشناسند و درخواست/پاسخ های بعدی روی کانکشن های جدید ایجاد می شوند.<br>۲- HTTP is media independent: یعنی تا زمانی که هم سرور و هم کلاینت بدونن که چجوری محتویات داده ها رو handle کنند هر داده ای می تواند در این بین منتقل شود و لذا هم برای کلاینت و هم برای سرور لازم است که نوع داده ها به وسیله ی MIME-type ها مشخص شود.<br>۳- HTTP is stateless: یعنی امکان نگاه داری اطلاعات بین درخواست های مختلف در طول صفحات وب وجود ندارد (به علت همون مورد اول)<br>"},{"sort_num":8,"color":"darkred","type":"bdi-text","group":"para","format":"txt","content":"دیاگرام زیر یک معماری خیلی پایه ای یک web application را نشان داده و نشان می دهد که HTTP کجا می نشیند:<br>"},{"sort_num":9,"color":"darkred","type":"img","group":"img-style1","format":"txt","content":"src = ../../assets/computer-science/pics/diagram.PNG, alt= , text =&nbsp;"},{"sort_num":10,"color":"darkred","type":"bdi-text","group":"head2","format":"txt","content":"client"},{"sort_num":11,"color":"darkred","type":"bdi-text","group":"para","format":"txt","content":"http client یک درخواست در فرم یک request methode، URI, protocol version که با یک پیام MIME-like که شامل تصیح کننده ی درخواست ، اطلاعات client و possible body content را به سرور می فرستد اون هم روی یک کانکشن TCP/IP"},{"sort_num":12,"color":"darkred","type":"bdi-text","group":"head2","format":"txt","content":"server"},{"sort_num":13,"color":"darkred","type":"bdi-text","group":"para","format":"txt","content":"http server با یک status line پاسخ می دهد که شامل message's protocol version and a success or error code می باشد و در ادامه اش a MIME-like message containing server information, entity meta information, and possible entity-body content آمده است."},{"sort_num":14,"color":"orangered","type":"bdi-text","group":"head1","format":"txt","content":"پارامتر های HTTP"},{"sort_num":16,"color":"orangered","type":"text","group":"code","format":"txt","content":"HTTP-Version   = \"HTTP\" \"/\" 1*DIGIT \".\" 1*DIGIT<br>// e.g. : HTTP/1.1\n<br><br>"},{"sort_num":17,"color":"orangered","type":"text","group":"code","format":"txt","content":"URI = \"http:\" \"//\" host [ \":\" port ] [ abs_path [ \"?\" query ]] \r<br>// empty port =&gt; default port = 80\r<br>// empty abs_path =&gt; default abs_path = /\r<br>// e.g. : http://abc.com:80/~smith/home.html\r<br>// e.g.(same): http://ABC.com/%7Esmith/home.html\r<br>// e.g.(same): http://ABC.com:/%7esmith/home.html\r<br><br>"},{"sort_num":18,"color":"orangered","type":"text","group":"code","format":"txt","content":"Sun, 06 Nov 1994 08:49:37 GMT ; RFC 822, updated by RFC 1123 \r<br>Sunday, 06-Nov-94 08:49:37 GMT ; RFC 850, obsoleted by RFC 1036 \r<br>Sun Nov 6 08:49:37 1994 ; ANSI C's asctime() format\r<br><br>"},{"sort_num":19,"color":"orangered","type":"text","group":"code","format":"txt","content":"US-ASCII\r //default\r<br>\ror\r<br>\rISO-8859-1\r<br>\ror \r<br>ISO-8859-7<br>"},{"sort_num":20,"color":"orangered","type":"text","group":"code","format":"txt","content":"// All content-coding values are case-insensitive<br>Accept-encoding: gzip\r<br>\ror\r<br>\rAccept-encoding: compress\r<br>\ror \r<br>\rAccept-encoding: deflate<br>"},{"sort_num":21,"color":"orangered","type":"text","group":"code","format":"txt","content":"media-type     = type \"/\" subtype *( \";\" parameter )<br>// e.g. : Accept: image/gif<br>// All the Media-type values are registered with the Internet Assigned Number Authority (IANA)<br>"},{"sort_num":22,"color":"tomato","type":"bdi-text","group":"head1","format":"txt","content":"HTTP - Messages"},{"sort_num":23,"color":"tomato","type":"bdi-text","group":"para","format":"txt","content":"یک client http یک برنامه ای هست که یک کانکشن رو با سرور با هدف فرستادن یک یا چند http request message ست آپ می کند. (مثل web browser)<br>یک server http یک برنامه ای هست که کانکشن ها رو می پذیرد با هدف serve کردن به http request به وسیله ی فرستادن http responce message (به طور کلی مثل وب سرور آپاچی یا IIS)<br><br>http از URI برای شناسایی کردن منبع داده شده و برای ست آپ کردن یک کانکشن استفاده می کند و به محض اینکه کانکشن established شد http messages ها با فرمت هایی شبیه با آنچه که استاندارد های RFC3522 و RFC2045 (که مربوط به internet mail و MIME هستند) عبور داده می شوند ، این message ها شامل درخواست های client به سرور پاسخ های server به کلاینت هستند که این message ها با فرمت زیر هستند:<br>"},{"sort_num":24,"color":"tomato","type":"text","group":"code","format":"txt","content":"HTTP-message   = &lt;Request&gt; | &lt;Response&gt; ; HTTP/1.1 messages"},{"sort_num":25,"color":"tomato","type":"bdi-text","group":"para","format":"txt","content":"http request و http responce از یک فرمت عمومی استفاده می کنند (با ضابطه ی RFC822) که این فرمت عمومی شامل ۴ مورد زیر است:<br>"},{"sort_num":26,"color":"tomato","type":"text","group":"para","format":"txt","content":"*A Start-line\n<br>*Zero or more header fields followed by CRLF\n<br>*An empty line (i.e., a line with nothing preceding the CRLF) \n<br>indicating the end of the header fields\n<br>*Optionally a message-body<br>"},{"sort_num":29,"color":"darkgoldenrod","type":"bdi-text","group":"head2","format":"txt","content":"start-line"},{"sort_num":30,"color":"darkgoldenrod","type":"bdi-text","group":"para","format":"txt","content":"به طور کلی سینتکس start-line به شکل زیر است:"},{"sort_num":31,"color":"darkgoldenrod","type":"text","group":"code","format":"txt","content":"start-line = Request-Line | Status-Line<br>// examples:<br>GET /hello.htm HTTP/1.1 #(This is Request-Line sent by the client)<br>HTTP/1.1 200 OK #(This is Status-Line sent by the server)<br>"}]