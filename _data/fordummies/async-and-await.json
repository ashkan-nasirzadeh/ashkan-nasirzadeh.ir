[{"sort_num":1,"color":"black","type":"img","group":"intro-img","format":"txt","content":"../../assets/computer-science/pics/api.jpg"},{"sort_num":2,"color":"black","type":"text","group":"intro-head","format":"txt","content":"async &amp; await"},{"sort_num":3,"color":"black","type":"bdi-text","group":"intro-author","format":"txt","content":"src=../../assets/homepage/media/rasmi.jpg , alt = ashkan nasirzadeh اشکان نصیرزاده , name = اشکان نصیرزاده"},{"sort_num":4,"color":"black","type":"bdi-text","group":"para","format":"txt","content":"خب می دونم که در مورد call stack و job stack و message stack می دونید ! و اگر نمی دونید برید بدونید وگرنه اینجا جاتون نیست، نکته ای که هست اینه که حالا می خواهیم یک کارِ async ای رو قبل از یک کار سینک انجام بدیم به زیر نگاه کنید:<br>"},{"sort_num":5,"color":"black","type":"text","group":"code","format":"txt","content":"setTimeout(()=&gt; {console.log('first')}, 1000);\r<br>console.log('last');<br><br>//output:<br>//last<br>//first<br>"},{"sort_num":6,"color":"black","type":"bdi-text","group":"para","format":"txt","content":"همونطور که می بینید اول کار سینک که تو call stack میره انجام می شه بعدش کار async انجام میشه که مطابق میل ما نیست<br>حالا اگر بخواهیم درستش کنیم باید چه کنیم ؟ باید اولا کل کار هایی که می خواهیم در موردشون صحبت کنیم ببریم در داخل یک async caller function :<br>"},{"sort_num":7,"color":"black","type":"text","group":"code","format":"txt","content":"cosnt asyncFunc = async () =&gt; {\r<br>&nbsp; &nbsp; setTimeout(()=&gt; {console.log('first')}, 1000);\r<br>&nbsp; &nbsp; console.log('last');\r<br>}<br>"},{"sort_num":8,"color":"black","type":"bdi-text","group":"para","format":"txt","content":"حالا باید بدونید که await اساسا چیه اصلا ؟ await یعنی منتظر یک promise بمون تا تموم بشه (resolve یا reject بشه) بعدش می تونی از روی این promise گذر کنی<br>در نتیجه ما در این جا می خواهیم await رو پشت setTimeout بگذاریم اما await باید پشت promise ها در job stack یاشند نه پشت async های داخل message stack پس باید اول یک promise بسازیم:<br>"},{"sort_num":9,"color":"black","type":"text","group":"code","format":"txt","content":"const promiseForSetTimeout = () =&gt; {\r<br>&nbsp; &nbsp; return new Promise ((resolve, reject) =&gt; {\r<br>&nbsp; &nbsp; &nbsp; &nbsp; setTimeout(()=&gt; {resolve('done');console.log('first')}, 1000);\r<br>&nbsp; &nbsp; });\r<br>}<br>"},{"sort_num":10,"color":"black","type":"bdi-text","group":"para","format":"txt","content":"در نتیجه کل کد ما و outputش اینطوری میشه:"},{"sort_num":11,"color":"black","type":"text","group":"code","format":"txt","content":"const promiseForSetTimeout = () =&gt; {\n<br>&nbsp; &nbsp; return new Promise ((resolve, reject) =&gt; {\n<br>&nbsp; &nbsp; &nbsp; &nbsp; setTimeout(()=&gt; {resolve('done');console.log('first')}, 1000);\n<br>&nbsp; &nbsp; });\n<br>}\n<br>const asyncFunc = async () =&gt; {\n<br>&nbsp; &nbsp; await promiseForSetTimeout();\n<br>&nbsp; &nbsp; console.log('last');\n<br>}\n<br>asyncFunc();<br><br>//output:<br>//first<br>//last<br>"}]